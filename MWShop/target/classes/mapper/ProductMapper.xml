<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etc.dao.ProductMapper">
	<resultMap id="BaseResultMap" type="com.etc.bean.Product">
		<id column="pid" jdbcType="INTEGER" property="pid" />
		<result column="pname" jdbcType="VARCHAR" property="pname" />
		<result column="marketprice" jdbcType="DOUBLE" property="marketprice" />
		<result column="shopprice" jdbcType="DOUBLE" property="shopprice" />
		<result column="image" jdbcType="VARCHAR" property="image" />
		<result column="pdesc" jdbcType="VARCHAR" property="pdesc" />
		<result column="ishot" jdbcType="INTEGER" property="ishot" />
		<result column="pdate" jdbcType="TIMESTAMP" property="pdate" />
		<result column="csid" jdbcType="INTEGER" property="csid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		pid, pname, marketprice, shopprice, image, pdesc, ishot, pdate, csid
	</sql>
	<select id="selectByExample" parameterType="com.etc.bean.ProductExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		where pid = #{pid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from product
		where pid = #{pid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.etc.bean.ProductExample">
		delete from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.etc.bean.Product">
		insert into product (pid, pname, marketprice,
		shopprice, image, pdesc,
		ishot, pdate, csid
		)
		values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR},
		#{marketprice,jdbcType=DOUBLE},
		#{shopprice,jdbcType=DOUBLE}, #{image,jdbcType=VARCHAR}, #{pdesc,jdbcType=VARCHAR},
		#{ishot,jdbcType=INTEGER}, #{pdate,jdbcType=TIMESTAMP},
		#{csid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.etc.bean.Product">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="pid != null">
				pid,
			</if>
			<if test="pname != null">
				pname,
			</if>
			<if test="marketprice != null">
				marketprice,
			</if>
			<if test="shopprice != null">
				shopprice,
			</if>
			<if test="image != null">
				image,
			</if>
			<if test="pdesc != null">
				pdesc,
			</if>
			<if test="ishot != null">
				ishot,
			</if>
			<if test="pdate != null">
				pdate,
			</if>
			<if test="csid != null">
				csid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pid != null">
				#{pid,jdbcType=INTEGER},
			</if>
			<if test="pname != null">
				#{pname,jdbcType=VARCHAR},
			</if>
			<if test="marketprice != null">
				#{marketprice,jdbcType=DOUBLE},
			</if>
			<if test="shopprice != null">
				#{shopprice,jdbcType=DOUBLE},
			</if>
			<if test="image != null">
				#{image,jdbcType=VARCHAR},
			</if>
			<if test="pdesc != null">
				#{pdesc,jdbcType=VARCHAR},
			</if>
			<if test="ishot != null">
				#{ishot,jdbcType=INTEGER},
			</if>
			<if test="pdate != null">
				#{pdate,jdbcType=TIMESTAMP},
			</if>
			<if test="csid != null">
				#{csid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.etc.bean.ProductExample"
		resultType="java.lang.Integer">
		select count(*) from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update product
		<set>
			<if test="record.pid != null">
				pid = #{record.pid,jdbcType=INTEGER},
			</if>
			<if test="record.pname != null">
				pname = #{record.pname,jdbcType=VARCHAR},
			</if>
			<if test="record.marketprice != null">
				marketprice = #{record.marketprice,jdbcType=DOUBLE},
			</if>
			<if test="record.shopprice != null">
				shopprice = #{record.shopprice,jdbcType=DOUBLE},
			</if>
			<if test="record.image != null">
				image = #{record.image,jdbcType=VARCHAR},
			</if>
			<if test="record.pdesc != null">
				pdesc = #{record.pdesc,jdbcType=VARCHAR},
			</if>
			<if test="record.ishot != null">
				ishot = #{record.ishot,jdbcType=INTEGER},
			</if>
			<if test="record.pdate != null">
				pdate = #{record.pdate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.csid != null">
				csid = #{record.csid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update product
		set pid = #{record.pid,jdbcType=INTEGER},
		pname = #{record.pname,jdbcType=VARCHAR},
		marketprice = #{record.marketprice,jdbcType=DOUBLE},
		shopprice = #{record.shopprice,jdbcType=DOUBLE},
		image = #{record.image,jdbcType=VARCHAR},
		pdesc = #{record.pdesc,jdbcType=VARCHAR},
		ishot = #{record.ishot,jdbcType=INTEGER},
		pdate = #{record.pdate,jdbcType=TIMESTAMP},
		csid = #{record.csid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.etc.bean.Product">
		update product
		<set>
			<if test="pname != null">
				pname = #{pname,jdbcType=VARCHAR},
			</if>
			<if test="marketprice != null">
				marketprice = #{marketprice,jdbcType=DOUBLE},
			</if>
			<if test="shopprice != null">
				shopprice = #{shopprice,jdbcType=DOUBLE},
			</if>
			<if test="image != null">
				image = #{image,jdbcType=VARCHAR},
			</if>
			<if test="pdesc != null">
				pdesc = #{pdesc,jdbcType=VARCHAR},
			</if>
			<if test="ishot != null">
				ishot = #{ishot,jdbcType=INTEGER},
			</if>
			<if test="pdate != null">
				pdate = #{pdate,jdbcType=TIMESTAMP},
			</if>
			<if test="csid != null">
				csid = #{csid,jdbcType=INTEGER},
			</if>
		</set>
		where pid = #{pid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.etc.bean.Product">
		update product
		set pname = #{pname,jdbcType=VARCHAR},
		marketprice = #{marketprice,jdbcType=DOUBLE},
		shopprice = #{shopprice,jdbcType=DOUBLE},
		image = #{image,jdbcType=VARCHAR},
		pdesc = #{pdesc,jdbcType=VARCHAR},
		ishot = #{ishot,jdbcType=INTEGER},
		pdate = #{pdate,jdbcType=TIMESTAMP},
		csid = #{csid,jdbcType=INTEGER}
		where pid = #{pid,jdbcType=INTEGER}
	</update>
	<select id="findProductIsHot" parameterType="int"
		resultType="com.etc.bean.Product">
		select * from product where ishot=#{ishot} LIMIT 0 ,6
	</select>
	
	<select id="findProductByPid" parameterType="int" resultType="com.etc.bean.Product">
		select * from product where pid=#{pid}
	</select>

	<select id="selectProductByCategoryID" parameterType="java.lang.Integer" resultType="com.etc.bean.Product" >
		select * from product where csid=#{csid}
	</select>
	<select id="selectAllProduct" resultType="com.etc.bean.Product">
		select * from product
	</select>
	
	<select id="newProduct" resultType="com.etc.bean.Product">
	select * from product ORDER BY pdate DESC LIMIT 0 ,6
	</select>
	
	<select id="findProductByName" parameterType="string" resultType="com.etc.bean.Product">
	select * from product where pname like '%${value}%'
	</select>
	
	<select id="sreachPname" parameterType="string" resultType="string">
	select pname from product where pname like '%${value}%' limit 10
	</select>
</mapper>